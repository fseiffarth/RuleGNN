device: # cpu or cuda, cpu is recommended for the experiments mode as it is faster at the moment
  cpu
mode:
  experiments # if debug printing and plotting options are enabled, for the experiments mode should be 'experiments'
batch_size:
  - 128
learning_rate:
  - 0.05
epochs:
  - 50
scheduler:
  True
dropout:
  - 0.0
optimizer:
  - Adam
loss:
  - CrossEntropyLoss
early_stopping:
  enabled:
    True
  patience:
    25

networks:
  - - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: distances, values: [ 1,2,3,4,5,6 ] } }
    - { layer_type: simple_cycles, max_cycle_length: 10 }
#   - - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: distances, values: [ 0, 2 ] } }
#     - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: distances, values: [ 0, 3 ] } }
#     - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: distances, values: [ 0, 5 ] } }
#     - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: distances, values: [ 0, 7 ] } }
#     - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: distances, values: [ 0, 11 ] } }
#     - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: distances, values: [ 0, 13 ] } }
#     - { layer_type: simple_cycles, max_cycle_length: 10 }
#  - - { layer_type: primary, properties: { name: edge_label_distances, values: [1,2,3,4,5,6 ] } }
#    - { layer_type: simple_cycles, max_cycle_length: 50, properties: { name: edge_label_distances, values: [1,2,3,4,5,6] } }
#    - { layer_type: primary, properties: { name: edge_label_distances, values: [1,2,3,4,5,6 ] } }
#    - { layer_type: simple_cycles, max_cycle_length: 50, max_node_labels: 500 }

#  - - { layer_type: primary, properties: { name: edge_label_distances, values: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ] } }
#    - { layer_type: simple_cycles, max_cycle_length: 10, max_node_labels: 500 }
#
#  - - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: {name: edge_label_distances, values: [1,2,3]} }
#    - { layer_type: simple_cycles, max_cycle_length: 50, max_node_labels: 500 }
#
#  - - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: distances, values: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ] } }
#    - { layer_type: induced_cycles, max_cycle_length: 50, max_node_labels: 500 }
#
#  - - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: edge_label_distances, values: [ 1,2,3 ] } }
#    - { layer_type: subgraph, id: 0}
#
#  - - { layer_type: wl, wl_iterations: 2, max_node_labels: 500, properties: { name: edge_label_distances, values: [ 1, 2, 3 ] } }
#    - { layer_type: subgraph, id: 1 }

# if subgraph labels are used the corresponding list of subgraphs should be provided here:
subgraphs:
  - "[nx.cycle_graph(5), nx.star_graph(1)]"
  - "[nx.cycle_graph(6), nx.star_graph(1)]"

input_features:
  {name: "node_labels", transformation: "normalize"}

# data options
balance_training:
  False

# Additional options for analysis only possible in debug mode
additional_options:
  draw: # draw the accuracy and loss during training
    True
  save_weights: # save the weights of the model
    False
  save_prediction_values:
    False
  plot_graphs: # Plot all graphs in the dataset
    False
  print_results: # Print accuracy and loss in the console
    True


prune:
  enabled:
    False
  epochs: # prune after this many epochs
    25
  percentage: # number of total weights pruned at the end of training per layer (0.1 means 10% of the weights will be pruned)
    - 0.999
    - 0.5

precision:
  double

best_model:
  False
save_last:
  False
