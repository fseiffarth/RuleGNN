paths:
  # all the paths are relative to the PYTHONPATH path
  data:
    "Data/BenchmarkGraphs/" # Path to the folder containing the graph data
  properties:
    "../../Data/GraphData/Properties/" # Precomputed properties will be loaded from this folder
  labels:
    "Data/Labels/" # Path to the folder containing the labels
  results:
    "../../RESULTS/RuleGNN/TEST/" # Results will be saved in this folder
  splits:
    "Data/Splits/" # Path to the folder containing the data splits

task:
  regression

device:
  cpu
mode:
  experiments # if debug printing and plotting options are enabled, for the experiments mode should be 'experiments'
batch_size:
  - 128
learning_rate:
  - 0.005
epochs:
  - 200
scheduler:
  False
dropout:
  - 0.0
optimizer:
  - Adam
loss:
  - MeanAbsoluteError
early_stopping:
  enabled:
    False
  patience:
    25
networks:
  - - { layer_type: primary, properties: { name: edge_label_distances, values: [
  [7, 1, [0, 3, 3, 1]], [7, 1, [0, 3, 4]], [7, 1, [0, 4, 2, 1]], [7, 1, [0, 4, 3]],
  [7, 1, [0, 5, 1, 1]], [7, 1, [0, 5, 2]], [7, 1, [0, 6, 0, 1]], [7, 1, [0, 6, 1]],
  [7, 1, [0, 7]], [7, 2, [0, 6, 6, 2]], [7, 2, [0, 6, 8]], [7, 2, [0, 7, 5, 2]], [7,
  2, [0, 7, 7]], [7, 2, [0, 8, 4, 2]], [7, 2, [0, 8, 6]], [7, 2, [0, 9, 3, 2]], [7,
  2, [0, 9, 5]], [7, 2, [0, 10, 2, 2]], [7, 2, [0, 10, 4]], [7, 2, [0, 11, 1, 2]],
  [7, 2, [0, 11, 3]], [7, 2, [0, 12, 0, 2]], [7, 2, [0, 12, 2]], [7, 2, [0, 13, 1]],
  [7, 2, [0, 14]], [7, 3, [0, 10, 11]], [7, 3, [0, 11, 7, 3]], [7, 3, [0, 11, 10]],
  [7, 3, [0, 12, 9]], [7, 3, [0, 13, 5, 3]], [7, 3, [0, 13, 8]], [7, 3, [0, 14, 4,
  3]], [7, 3, [0, 14, 7]], [7, 3, [0, 15, 3, 3]], [7, 3, [0, 15, 6]], [7, 3, [0, 16,
  2, 3]], [7, 3, [0, 16, 5]], [7, 3, [0, 17, 4]], [7, 3, [0, 18, 3]], [7, 3, [0, 19,
  2]], [7, 3, [0, 20, 1]], [7, 3, [0, 21]], [7, 4, [0, 16, 12]], [7, 4, [0, 17, 11]],
  [7, 4, [0, 18, 10]], [7, 4, [0, 19, 9]], [7, 4, [0, 20, 8]], [7, 4, [0, 21, 7]],
  [7, 4, [0, 22, 6]], [7, 4, [0, 23, 5]], [7, 4, [0, 24, 4]], [7, 4, [0, 26, 2]],
  [7, 4, [0, 28]], [7, 5, [0, 20, 15]], [7, 5, [0, 21, 14]], [7, 5, [0, 22, 13]],
  [7, 5, [0, 23, 12]], [7, 5, [0, 24, 11]], [7, 5, [0, 25, 10]], [7, 5, [0, 26, 9]],
  [7, 5, [0, 27, 8]], [7, 5, [0, 28, 7]], [7, 5, [0, 33, 2]], [7, 5, [0, 34, 1]],
  [7, 5, [0, 35]], [8, 1, [0, 4, 2, 2]], [8, 1, [0, 4, 3, 1]], [8, 1, [0, 4, 4]],
  [8, 1, [0, 5, 1, 2]], [8, 1, [0, 5, 2, 1]], [8, 1, [0, 5, 3]], [8, 1, [0, 6, 0,
  2]], [8, 1, [0, 6, 1, 1]], [8, 1, [0, 6, 2]], [8, 1, [0, 7, 0, 1]], [8, 1, [0, 7,
  1]], [8, 1, [0, 8]], [8, 2, [0, 8, 6, 2]], [8, 2, [0, 8, 8]], [8, 2, [0, 9, 5, 2]],
  [8, 2, [0, 9, 7]], [8, 2, [0, 10, 4, 2]], [8, 2, [0, 10, 6]], [8, 2, [0, 11, 3,
  2]], [8, 2, [0, 11, 5]], [8, 2, [0, 12, 2, 2]], [8, 2, [0, 12, 4]], [8, 2, [0, 13,
  1, 2]], [8, 2, [0, 13, 3]], [8, 2, [0, 14, 0, 2]], [8, 2, [0, 14, 2]], [8, 2, [0,
  15, 1]], [8, 2, [0, 16]], [8, 3, [0, 13, 11]], [8, 3, [0, 14, 7, 3]], [8, 3, [0,
  14, 10]], [8, 3, [0, 15, 9]], [8, 3, [0, 16, 5, 3]], [8, 3, [0, 16, 8]], [8, 3,
  [0, 17, 4, 3]], [8, 3, [0, 17, 7]], [8, 3, [0, 18, 3, 3]], [8, 3, [0, 18, 6]], [8,
  3, [0, 19, 2, 3]], [8, 3, [0, 19, 5]], [8, 3, [0, 20, 4]], [8, 3, [0, 21, 3]], [8,
  3, [0, 22, 2]], [8, 3, [0, 23, 1]], [8, 3, [0, 24]], [8, 4, [0, 17, 15]], [8, 4,
  [0, 18, 14]], [8, 4, [0, 19, 13]], [8, 4, [0, 20, 12]], [8, 4, [0, 21, 11]], [8,
  4, [0, 22, 10]], [8, 4, [0, 23, 9]], [8, 4, [0, 24, 8]], [8, 4, [0, 25, 7]], [8,
  4, [0, 26, 6]], [8, 4, [0, 27, 5]], [8, 4, [0, 28, 4]], [8, 4, [0, 30, 2]], [8,
  4, [0, 32]], [8, 5, [0, 24, 16]], [8, 5, [0, 27, 13]], [8, 5, [0, 28, 12]], [8,
  5, [0, 29, 11]], [8, 5, [0, 30, 10]], [8, 5, [0, 31, 9]], [8, 5, [0, 32, 8]], [8,
  5, [0, 33, 7]], [8, 5, [0, 35, 5]], [8, 5, [0, 38, 2]], [8, 5, [0, 39, 1]], [8,
  5, [0, 40]], [8, 6, [0, 37, 11]], [8, 6, [0, 38, 10]], [8, 6, [0, 40, 8]], [8, 6,
  [0, 44, 4]], [9, 1, [0, 4, 5]], [9, 1, [0, 5, 3, 1]], [9, 1, [0, 5, 4]], [9, 1,
  [0, 6, 1, 2]], [9, 1, [0, 6, 2, 1]], [9, 1, [0, 6, 3]], [9, 1, [0, 7, 1, 1]], [9,
  1, [0, 7, 2]], [9, 1, [0, 8, 0, 1]], [9, 1, [0, 8, 1]], [9, 1, [0, 9]], [9, 2, [0,
  9, 7, 2]], [9, 2, [0, 9, 9]], [9, 2, [0, 10, 8]], [9, 2, [0, 11, 5, 2]], [9, 2,
  [0, 11, 7]], [9, 2, [0, 12, 4, 2]], [9, 2, [0, 12, 6]], [9, 2, [0, 13, 3, 2]], [9,
  2, [0, 13, 5]], [9, 2, [0, 14, 2, 2]], [9, 2, [0, 14, 4]], [9, 2, [0, 15, 1, 2]],
  [9, 2, [0, 15, 3]], [9, 2, [0, 16, 0, 2]], [9, 2, [0, 16, 2]], [9, 2, [0, 17, 1]],
  [9, 2, [0, 18]], [9, 3, [0, 13, 14]], [9, 3, [0, 14, 10, 3]], [9, 3, [0, 14, 13]],
  [9, 3, [0, 15, 12]], [9, 3, [0, 16, 11]], [9, 3, [0, 17, 7, 3]], [9, 3, [0, 17,
  10]], [9, 3, [0, 18, 9]], [9, 3, [0, 19, 5, 3]], [9, 3, [0, 19, 8]], [9, 3, [0,
  20, 4, 3]], [9, 3, [0, 20, 7]], [9, 3, [0, 21, 3, 3]], [9, 3, [0, 21, 6]], [9, 3,
  [0, 22, 2, 3]], [9, 3, [0, 22, 5]], [9, 3, [0, 23, 4]], [9, 3, [0, 24, 0, 3]], [9,
  3, [0, 24, 3]], [9, 3, [0, 25, 2]], [9, 3, [0, 26, 1]], [9, 3, [0, 27]], [9, 4,
  [0, 18, 18]], [9, 4, [0, 20, 12, 4]], [9, 4, [0, 20, 16]], [9, 4, [0, 21, 15]],
  [9, 4, [0, 22, 10, 4]], [9, 4, [0, 22, 14]], [9, 4, [0, 23, 13]], [9, 4, [0, 24,
  8, 4]], [9, 4, [0, 24, 12]], [9, 4, [0, 26, 6, 4]], [9, 4, [0, 26, 10]], [9, 4,
  [0, 27, 9]], [9, 4, [0, 28, 8]], [9, 4, [0, 29, 7]], [9, 4, [0, 30, 2, 4]], [9,
  4, [0, 30, 6]], [9, 4, [0, 31, 5]], [9, 4, [0, 32, 4]], [9, 4, [0, 34, 2]], [9,
  4, [0, 36]], [9, 5, [0, 27, 18]], [9, 5, [0, 30, 15]], [9, 5, [0, 32, 13]], [9,
  5, [0, 33, 12]], [9, 5, [0, 34, 11]], [9, 5, [0, 35, 10]], [9, 5, [0, 37, 8]], [9,
  5, [0, 38, 7]], [9, 5, [0, 40, 5]], [9, 5, [0, 43, 2]], [9, 5, [0, 44, 1]], [9,
  5, [0, 45]], [9, 6, [0, 31, 23]], [9, 6, [0, 33, 21]], [9, 6, [0, 35, 19]], [9,
  6, [0, 36, 18]], [9, 6, [0, 37, 17]], [9, 6, [0, 39, 15]], [9, 6, [0, 40, 14]],
  [9, 6, [0, 41, 13]], [9, 6, [0, 42, 12]], [9, 6, [0, 43, 11]], [9, 6, [0, 44, 10]],
  [9, 6, [0, 45, 9]], [9, 6, [0, 46, 8]], [9, 6, [0, 48, 6]], [9, 6, [0, 50, 4]],
  [9, 6, [0, 54]], [9, 7, [0, 43, 20]], [9, 7, [0, 44, 19]], [9, 7, [0, 51, 12]],
  [9, 8, [0, 58, 14]], [9, 8, [0, 60, 12]], [10, 1, [0, 5, 5]], [10, 1, [0, 6, 2,
  2]], [10, 1, [0, 6, 3, 1]], [10, 1, [0, 6, 4]], [10, 1, [0, 7, 1, 2]], [10, 1, [0,
  7, 2, 1]], [10, 1, [0, 7, 3]], [10, 1, [0, 8, 0, 2]], [10, 1, [0, 8, 1, 1]], [10,
  1, [0, 8, 2]], [10, 1, [0, 9, 0, 1]], [10, 1, [0, 9, 1]], [10, 1, [0, 10]], [10,
  2, [0, 11, 7, 2]], [10, 2, [0, 11, 9]], [10, 2, [0, 12, 6, 2]], [10, 2, [0, 12,
  8]], [10, 2, [0, 13, 5, 2]], [10, 2, [0, 13, 7]], [10, 2, [0, 14, 4, 2]], [10, 2,
  [0, 14, 6]], [10, 2, [0, 15, 3, 2]], [10, 2, [0, 15, 5]], [10, 2, [0, 16, 2, 2]],
  [10, 2, [0, 16, 4]], [10, 2, [0, 17, 1, 2]], [10, 2, [0, 17, 3]], [10, 2, [0, 18,
  0, 2]], [10, 2, [0, 18, 2]], [10, 2, [0, 19, 1]], [10, 2, [0, 20]], [10, 3, [0,
  16, 14]], [10, 3, [0, 17, 10, 3]], [10, 3, [0, 17, 13]], [10, 3, [0, 18, 12]], [10,
  3, [0, 19, 8, 3]], [10, 3, [0, 19, 11]], [10, 3, [0, 20, 7, 3]], [10, 3, [0, 20,
  10]], [10, 3, [0, 21, 9]], [10, 3, [0, 22, 5, 3]], [10, 3, [0, 22, 8]], [10, 3,
  [0, 23, 4, 3]], [10, 3, [0, 23, 7]], [10, 3, [0, 24, 3, 3]], [10, 3, [0, 24, 6]],
  [10, 3, [0, 25, 5]], [10, 3, [0, 26, 4]], [10, 3, [0, 27, 0, 3]], [10, 3, [0, 27,
  3]], [10, 3, [0, 28, 2]], [10, 3, [0, 29, 1]], [10, 3, [0, 30]], [10, 4, [0, 22,
  18]], [10, 4, [0, 24, 12, 4]], [10, 4, [0, 24, 16]], [10, 4, [0, 26, 10, 4]], [10,
  4, [0, 26, 14]], [10, 4, [0, 27, 13]], [10, 4, [0, 28, 8, 4]], [10, 4, [0, 28, 12]],
  [10, 4, [0, 29, 11]], [10, 4, [0, 30, 6, 4]], [10, 4, [0, 30, 10]], [10, 4, [0,
  31, 9]], [10, 4, [0, 32, 8]], [10, 4, [0, 33, 7]], [10, 4, [0, 34, 2, 4]], [10,
  4, [0, 34, 6]], [10, 4, [0, 35, 5]], [10, 4, [0, 36, 4]], [10, 4, [0, 38, 2]], [10,
  4, [0, 40]], [10, 5, [0, 32, 18]], [10, 5, [0, 33, 17]], [10, 5, [0, 35, 15]], [10,
  5, [0, 37, 13]], [10, 5, [0, 38, 12]], [10, 5, [0, 39, 11]], [10, 5, [0, 42, 8]],
  [10, 5, [0, 43, 7]], [10, 5, [0, 44, 6]], [10, 5, [0, 45, 5]], [10, 5, [0, 48, 2]],
  [10, 5, [0, 49, 1]], [10, 5, [0, 50]], [10, 6, [0, 35, 25]], [10, 6, [0, 37, 23]],
  [10, 6, [0, 39, 21]], [10, 6, [0, 40, 20]], [10, 6, [0, 41, 19]], [10, 6, [0, 42,
  18]], [10, 6, [0, 43, 17]], [10, 6, [0, 45, 15]], [10, 6, [0, 46, 14]], [10, 6,
  [0, 47, 13]], [10, 6, [0, 48, 12]], [10, 6, [0, 49, 11]], [10, 6, [0, 50, 10]],
  [10, 6, [0, 51, 9]], [10, 6, [0, 52, 8]], [10, 6, [0, 54, 6]], [10, 6, [0, 56, 4]],
  [10, 6, [0, 57, 3]], [10, 6, [0, 60]], [10, 7, [0, 43, 27]], [10, 7, [0, 51, 19]],
  [10, 7, [0, 58, 12]], [10, 8, [0, 66, 14]], [10, 8, [0, 68, 12]], [10, 8, [0, 76,
  4]], [10, 8, [0, 80]]]}}
    - { layer_type: primary, properties: { name: edge_label_distances, values: [[4,
  1, [0, 1, 3]], [4, 1, [0, 2, 0, 2]], [4, 1, [0, 2, 1, 1]], [4, 1, [0, 2, 2]], [4,
  1, [0, 3, 0, 1]], [4, 1, [0, 3, 1]], [4, 1, [0, 4]], [4, 2, [0, 4, 4]], [4, 2, [0,
  5, 3]], [4, 2, [0, 6, 0, 2]], [4, 2, [0, 6, 2]], [4, 2, [0, 7, 1]], [4, 2, [0, 8]],
  [4, 3, [0, 8, 4]], [4, 3, [0, 10, 2]], [4, 3, [0, 11, 1]], [4, 3, [0, 12]], [4,
  4, [0, 16]], [5, 1, [0, 2, 1, 2]], [5, 1, [0, 2, 2, 1]], [5, 1, [0, 2, 3]], [5,
  1, [0, 3, 1, 1]], [5, 1, [0, 3, 2]], [5, 1, [0, 4, 0, 1]], [5, 1, [0, 4, 1]], [5,
  1, [0, 5]], [5, 2, [0, 4, 6]], [5, 2, [0, 5, 3, 2]], [5, 2, [0, 5, 5]], [5, 2, [0,
  6, 2, 2]], [5, 2, [0, 6, 4]], [5, 2, [0, 7, 1, 2]], [5, 2, [0, 7, 3]], [5, 2, [0,
  8, 0, 2]], [5, 2, [0, 8, 2]], [5, 2, [0, 9, 1]], [5, 2, [0, 10]], [5, 3, [0, 8,
  7]], [5, 3, [0, 9, 6]], [5, 3, [0, 10, 5]], [5, 3, [0, 11, 4]], [5, 3, [0, 12, 3]],
  [5, 3, [0, 13, 2]], [5, 3, [0, 14, 1]], [5, 3, [0, 15]], [5, 4, [0, 20]], [6, 1,
  [0, 3, 1, 2]], [6, 1, [0, 3, 2, 1]], [6, 1, [0, 3, 3]], [6, 1, [0, 4, 0, 2]], [6,
  1, [0, 4, 1, 1]], [6, 1, [0, 4, 2]], [6, 1, [0, 5, 0, 1]], [6, 1, [0, 5, 1]], [6,
  1, [0, 6]], [6, 2, [0, 5, 7]], [6, 2, [0, 6, 4, 2]], [6, 2, [0, 6, 6]], [6, 2, [0,
  7, 3, 2]], [6, 2, [0, 7, 5]], [6, 2, [0, 8, 2, 2]], [6, 2, [0, 8, 4]], [6, 2, [0,
  9, 1, 2]], [6, 2, [0, 9, 3]], [6, 2, [0, 10, 0, 2]], [6, 2, [0, 10, 2]], [6, 2,
  [0, 11, 1]], [6, 2, [0, 12]], [6, 3, [0, 9, 9]], [6, 3, [0, 10, 8]], [6, 3, [0,
  11, 7]], [6, 3, [0, 12, 6]], [6, 3, [0, 13, 5]], [6, 3, [0, 14, 4]], [6, 3, [0,
  15, 3]], [6, 3, [0, 16, 2]], [6, 3, [0, 17, 1]], [6, 3, [0, 18]], [6, 4, [0, 18,
  6]], [6, 4, [0, 19, 5]], [6, 4, [0, 20, 4]], [6, 4, [0, 22, 2]], [6, 4, [0, 24]]] }}
    - { layer_type: primary, properties: { name: edge_label_distances, values: [[1, 1, [0, 0, 0, 1]], [1, 1, [0, 0, 1]], [1, 1, [0,
  1]], [2, 1, [0, 0, 2]], [2, 1, [0, 1, 0, 1]], [2, 1, [0, 1, 1]], [2, 1, [0, 2]],
  [2, 2, [0, 3, 1]], [2, 2, [0, 4]], [3, 1, [0, 1, 1, 1]], [3, 1, [0, 1, 2]], [3,
  1, [0, 2, 0, 1]], [3, 1, [0, 2, 1]], [3, 1, [0, 3]], [3, 2, [0, 3, 3]], [3, 2, [0,
  4, 2]], [3, 2, [0, 5, 1]], [3, 2, [0, 6]], [3, 3, [0, 8, 1]], [3, 3, [0, 9]]] }}
    - { layer_type: simple_cycles, max_cycle_length: 50 }


use_features: # if True uses normlized node labels as input features, if False uses 1-vector as input features
  True
use_attributes: # if True uses node attributes instead of node labels
  False
random_variation: # if True adds random variation to the input features
  False
load_splits: # if True loads precomputed data splits (use False only for new datasets)
  True

# data options
balance_training:
  False

# Additional options for analysis only possible in debug mode
additional_options:
  draw: # draw the accuracy and loss during training
    True
  save_weights: # save the weights of the model
    False
  save_prediction_values:
    True
  plot_graphs: # Plot all graphs in the dataset
    False
  print_results: # Print accuracy and loss in the console
    True


prune:
  enabled:
    False
  epochs: # prune after this many epochs
    25
  percentage: # number of total weights pruned at the end of training per layer (0.1 means 10% of the weights will be pruned)
    - 0.999
    - 0.5

precision:
  double

best_model:
  True
save_last:
  True

config_id:
  110