paths:
  data:
    "../GraphData/DS_all/" # Path to the folder containing the graph data
  properties:
    "Data/Properties/" # Precomputed properties will be loaded from this folder
  labels:
    "Data/Labels/" # Path to the folder containing the labels
  results:
    "TEST/" # Results will be saved in this folder
  splits:
    "Data/Splits/" # Path to the folder containing the data splits

device:
  cpu
mode:
  debug # if debug printing and plotting options are enabled, for the experiments mode should be 'experiments'
batch_size:
  - 64
learning_rate:
  - 0.01
epochs:
  - 500
scheduler:
  False
dropout:
  - 0.9
optimizer:
  - Adam
loss:
  - CrossEntropyLoss
early_stopping:
  enabled:
    False
  patience:
    25
networks:
  - - { 'layer_type': 'subgraph', 'id': 1, 'properties': { 'name': 'distances', 'values': [ 1, 2 ] } }
    - { 'layer_type': 'induced_cycles', 'max_cycle_length': 5 }
  - - { 'layer_type': 'induced_cycles', 'max_cycle_length': 50, 'properties': { 'name': 'distances', 'values': [ 1, 2 ] } }
    - { 'layer_type': 'cliques', 'max_clique_size': 20, 'properties': { 'name': 'distances', 'values': [ 1, 2 ] } }
    - { 'layer_type': 'subgraph', 'id': 1 }
use_features: # if True uses normlized node labels as input features, if False uses 1-vector as input features
  True
use_attributes: # if True uses node attributes instead of node labels
  False
random_variation: # if True adds random variation to the input features
  False
load_splits: # if True loads precomputed data splits (use False only for new datasets)
  True

# data options
balance_training:
  False

# Additional options for analysis only possible in debug mode
additional_options:
  draw: # draw the accuracy and loss during training
    True
  save_weights: # save the weights of the model
    False
  save_prediction_values:
    True
  plot_graphs: # Plot all graphs in the dataset
    False
  print_results: # Print accuracy and loss in the console
    True


prune:
  enabled:
    False
  epochs: # prune after this many epochs
    25
  percentage: # number of total weights pruned at the end of training per layer (0.1 means 10% of the weights will be pruned)
    - 0.999
    - 0.5

precision:
  double

best_model:
  True
save_last:
  True
